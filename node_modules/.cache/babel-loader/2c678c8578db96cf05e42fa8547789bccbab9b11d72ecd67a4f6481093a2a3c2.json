{"ast":null,"code":"var _jsxFileName = \"/Users/ruud/Code/Pomodoro-Widget-React/src/components/Inputs/InputField/index.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  box-sizing: border-box;\n  border: 1px solid ${props => props.theme.colors.primary};\n  border-radius: 6px;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.success};\n    outline: none;\n  }\n\n  // You can add more styles based on props\n  font-size: ${props => props.theme.fontSize.medium};\n\n  // Example of conditional styling based on a prop\n  background-color: ${props => props.error ? props.theme.colors.danger : 'white'};\n`;\n_c = StyledInput;\nconst InputField = ({\n  error,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledInput, {\n    error: error,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_c2 = InputField;\nexport default InputField;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"InputField\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","StyledInput","input","props","theme","colors","primary","success","fontSize","medium","error","danger","_c","InputField","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ruud/Code/Pomodoro-Widget-React/src/components/Inputs/InputField/index.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  box-sizing: border-box;\n  border: 1px solid ${props => props.theme.colors.primary};\n  border-radius: 6px;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.success};\n    outline: none;\n  }\n\n  // You can add more styles based on props\n  font-size: ${props => props.theme.fontSize.medium};\n\n  // Example of conditional styling based on a prop\n  background-color: ${props => props.error ? props.theme.colors.danger : 'white'};\n`;\n\nconst InputField = ({ error, ...props }) => {\n  return <StyledInput error={error} {...props} />;\n};\n\nexport default InputField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGH,MAAM,CAACI,KAAM;AACjC;AACA;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,OAAQ;AAC1D;AACA;AACA;AACA,oBAAoBH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,OAAQ;AACxD;AACA;AACA;AACA;AACA,eAAeJ,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACI,QAAQ,CAACC,MAAO;AACpD;AACA;AACA,sBAAsBN,KAAK,IAAIA,KAAK,CAACO,KAAK,GAAGP,KAAK,CAACC,KAAK,CAACC,MAAM,CAACM,MAAM,GAAG,OAAQ;AACjF,CAAC;AAACC,EAAA,GAjBIX,WAAW;AAmBjB,MAAMY,UAAU,GAAGA,CAAC;EAAEH,KAAK;EAAE,GAAGP;AAAM,CAAC,KAAK;EAC1C,oBAAOH,OAAA,CAACC,WAAW;IAACS,KAAK,EAAEA,KAAM;IAAA,GAAKP;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACjD,CAAC;AAACC,GAAA,GAFIL,UAAU;AAIhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}